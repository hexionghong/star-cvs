#!/usr/bin/env perl

#
# Initial version to help users locate files
# J. Lauret 2009-2010
#

use Env qw(STAR_SCRIPTS);
use lib "$STAR_SCRIPTS";

use RunDAQ;

# Do not change - auto
$SELF  = $0;
$SELF  =~ s/.*\///;

# Internal parameters
$QUERY = 0;               # returns primary DB info on #Evets and coll
$QHPSS = 0;               # query path in HPSS
$ALLP  = 0;               # disable default info if $QHPSS is on

if ( $#ARGV == -1){
    print qq~
Usage:
  % $SELF runNumber       # query a unique run
  % $SELF runMin-runMax   # using a range of run numbers

Use -Q     for querrying the primary database.
    -hpss  to display a possible path in HPSS for the processed files
    -allp  to re-enable all printouts along wity -hpss

~;
    exit;
}

$obj   = rdaq_open_odatabase();

foreach $run (@ARGV){
    if ($run =~ /-Q/){
	$QUERY = 1;

    } elsif ($run =~ m/-hpss/){
	$QHPSS = 1;

    } elsif ($run =~ m/-allp/){
	$ALLP = 1;

    } elsif ($run =~ m/(\d+)-(\d+)/){
	$lowrn = $1;
	$highr = $2;
	for ($r=$lowrn; $r<=$highr; $r++){
	    &ProcessRun($r);
	}
    } else {
	&ProcessRun($run);
    }
}
rdaq_close_odatabase($obj);


sub ProcessRun {
    my($run)=@_;

    # prepare conditons but one by one
    $Conds{runNumber} = $run;

    @all = rdaq_get_orecords($obj,\%Conds,0,-1);

    if ($#all == -1){
	print "Do not know about runNumber=$run\n" if ( ! $QHPSS || $ALLP );
    } else {
	print "runNumber=$run summary\n"           if ( ! $QHPSS || $ALLP );
	foreach $ligne (@all){
	    @info = split(" ",$ligne);
	    $status = $info[$#info];
	    $numevt = $info[2];
	    $stsstr = rdaq_status_string($status);

	    printf "%40.40s - %10.10s (%6.6d) ",$info[0],$stsstr,$numevt if ( ! $QHPSS || $ALLP );

	    $xtra = "";
	    if ($numevt == 0){
		$reason = "Unknown/delayed evt";
		$xtra   = "Ignored";
	    } elsif ( $numevt<100){
		$reason = "Low event count";
		$xtra   = "Skipped";
	    } else {
		$reason = "OK";
	    }

	    # analyze/sort more potential problems
	    if ( $info[9] == 0){
		$reason = "Unknown detector set";
		$xtra   = "Ignored";
	    } elsif ( $info[9] == 0){
		$reason = "Unknown trigger set";
		$xtra   = "Ignored";
	    }


	    # check location
	    $path = "";
	    $loc  = rdaq_get_location($obj,$info[0]);

	    if ( $QHPSS ){
		#print "*** $loc\n";
		if ( $loc ne 0 && ( $status == 2 || $status == 3) ){
		    if ( $info[1] >= 10000000 ){
			$trgsn = &rdaq_trgs2string($info[10]);
			$field = &rdaq_scaleToString($info[6]);
			$dm    = &rdaq_file2hpss($info[0]); 
			         $dm =~ s/.*daq\///;
			         $dm =~ s/\/st_.*//;
			$path  = "/home/starreco/reco/$trgsn/$field/dev/$dm $info[0]";
			# "*** Yeah! $path\n";
			#print "***".join(";",@info)."\n";
			# rdaq_file2hpss($info[0],0)."\n";
		    }
		}
	    }


	    if ( $loc ne 0 && $xtra eq ""){
		$xtra = "ON DISK";
	    } elsif ( $status == 1 && $xtra eq ""){
		$xtra = "Check later";
	    }

	    printf "%20.20s %12.12s %s\n",$reason,$xtra,($loc ne 0?$loc:"")  if ( ! $QHPSS || $ALLP );
	    if ( $path ne ""){
		if ( $ALLP ){
		    printf "%40.40s * %s\n","",$path;
		} else {
		    print "$path\n";
		}

	    }
	}
    }

    if ( $QUERY){
	# rdaq_toggle_debug(1);
	my($OO)=rdaq_open_rdatabase();
	if ($OO){
	    @runs = rdaq_raw_files($OO,"=$run");
	    print "Found ".($#runs+1)." in the primary DB\n";
	    #rdaq_toggle_debug(0);
	    rdaq_close_rdatabase($OO);
	    printf "\t%40.40s %5.5s %6.6s %10.10s\n","Name","#Evts","BeamE","Coll";
	    printf "\t%64.64s\n","----------------------------------------------------------------------";
	    foreach $ligne (@runs){
		@items = split(" ",$ligne);
		printf "\t%40.40s %5.5d %4.2f %10.10s\n",$items[0],$items[2],$items[7],$items[8];
	    }
	}
    }

}

