#!/usr/local/bin/perl 

#
# Wrapper for linkcheck. 
# linkcheck program is a perl script available from CPAN. Please, 
# install it where you see fit and on your WebServer. Configure
# the top portion of this warpper.
#
# This script can be used unde rthe terms of the GNU public license.
# 
# The 2 first arguments will modify the next variables in order
#
$FLNM      = "Broken.html";                           # name of report
$URL       = "http://www.star.bnl.gov/";              # URL to analyze


$LINKCHECK = "/usr/local/bin/linkcheck";              # linkcheck program
$ARGS      = "--recurse --verbosity 1";               # linkcheck options

$TARGETD   = "/star/starlib/doc/www/html/tmp/";       # output directory
@EXCLUDED  = ("protected","HyperNews-star");          # patterns to exclude

$BGATTRIB  = "bgcolor=cornsilk text=black link=navy vlink=maroon alink=tomato";
$FONT      = "<basefont face=\"verdana,arial,helvetica,sans-serif\">";

$IMG1      = "<IMG SRC=\"/icons/forward.gif\" BORDER=0>";   
                                                      # Text/Image each page
$IMG2      = "<IMG SRC=\"/icons/bomb.gif\"    BORDER=0>";   
                                                      # Text/Image for broken
$IMG3      = "(more)";                                # Text/Image cross-link



# ----------------- NOTHING TO CHANGE BELOW THIS LINE --------------------
# First Argument may be an alternate file name
$FLNM = $ARGV[0] if( defined($ARGV[0]) );
# Second argument may be a WebSite to scan
$URL  = $ARGV[1] if( defined($ARGV[1]) );


# This command might bomb so trap, STDERR
open(SAVEERR,">&STDERR");
open(STDERR,">/dev/null");
@all = `$LINKCHECK $ARGS $URL`;
close(STDERR);
open(STDERR,">&SAVEERR");


# Start with a finer grain report i.e. sort by own many
# links are broken in a given page.
foreach $line (@all){
    if( $line =~ /BROKEN/){
	$skip = 0;
	foreach $pat (@EXCLUDED){
	    if($line =~ /$pat/){
		$skip = 1;
		last;
	    }
	}
	if($skip){ next;}
	
	# Ok, go now ..
	chomp($line);
	@items = split(" ",$line);

	# First, count of broken links per page
	if( defined($PAGE{$items[1]}) ){
	    $PAGE{$items[1]}++;
	    if( $REFS{$items[1]} !~ /$items[3]\|/){
		$REFS{$items[1]} .= "$items[3]|";
	    }
	} else {
	    $PAGE{$items[1]} = 1;
	    $REFS{$items[1]} = "$items[3]|";
	}

	# Now, tree of broken links i.e. where a broken
	# link appears. 
	if( defined($BROKEN{$items[3]}) ){
	    if( $BROKEN{$items[3]} !~ /$items[1]\|/){
		$BROKEN{$items[3]} .= "$items[1]|";
	    }
	} else {
	    $BROKEN{$items[3]}  = "$items[1]|";
	}
    }
}


if ( open(FO,">$TARGETD/$FLNM-tmp") ){   # If not, forget it
    print FO 
	"<HTML>\n",
	"<HEAD><TITLE>Broken links in $URL</TITLE></HEAD>\n";
    print FO 
	"<BODY $BGATTRIB>\n$FONT\n",
	"<!-- Page AutoGenerated on ".localtime()." (c) J.Lauret -->\n";
    print FO 
	"<H1>List of broken links in <tt>$URL</tt></h1>\n",
	"<I>Auto-Generated on ".localtime()."</I>\n";
    print FO 
	"<UL>\n",
	"<LI><A HREF=\"#PagesWithBrokenLinks\">Pages with Broken Links</A>\n",
	"<LI><A HREF=\"#BrokenLinksIn\">Broken Links reference list</A>\n",
	"<LI><A HREF=\"#Full\">Full report</A>\n",
	"</UL>\n",
	"<P>\n";
    

    ########## DISPLAY 1  #########################
    print FO
	"<HR WIDTH=\"80%\"><H2><A NAME=\"PagesWithBrokenLinks\">Pages with Broken Links</A></H2>",
	"<DL>\n";
    foreach $el (sort {$PAGE{$b} <=> $PAGE{$a}} keys %PAGE){
	$sel = $el;
	$sel =~ s/$URL//;
	print FO "<P><DT>$IMG1 &nbsp; $PAGE{$el} broken link in <TT><A HREF=\"$el\">$sel</A></TT>\n";

	@items = split(/\|/,$REFS{$el});
	print FO " <UL>\n";
	foreach $line (@items){
	    $l = &GetRef($line);
	    print FO " <LI><TT>$line</TT> <A HREF=\"#$l\">$IMG3</A>\n";
	}
	print FO " </UL>\n";
    }
    print FO 
	"</DL>\n";


    ########## DISPLAY 2  #########################
    print FO
	"<HR WIDTH=\"80%\"><H2><A NAME=\"BrokenLinksIn\">Broken Links reference list</A></H2>",
	"<DL>\n";
    foreach $el (sort keys %BROKEN){
	$l = &GetRef($el);
	print FO "<P><DT><A NAME=\"$l\"></A>$IMG2 &nbsp; <TT>$el</TT> appears in\n";
	@items = split(/\|/,$BROKEN{$el});
	print FO " <UL>\n";
	foreach $line (@items){
	    $sel = $line;
	    $sel =~ s/$URL//;
	    print FO " <LI><tt><A HREF=\"$line\">$sel</A></tt>\n";
	}
	print FO " </UL>\n";
    }
    print FO
	"</DL>\n";


    ########## DISPLAY 3  #########################
    print FO
	"<HR WIDTH=\"80%\"><H2><A NAME=\"Full\">Full report</A></H2>",
	"<PRE>\n";
    foreach $line (@all){
	$skip = 0;
	foreach $pat (@EXCLUDED){
	    if($line =~ /$pat/){
		$skip = 1;
		last;
	    }
	}
	if($skip){ next;}
	print FO "$line\n";
    }
    print FO "</PRE>\n";
    close(FO);
}


# Safely move now that IO are all done.
if( -e "$TARGETD/$FLNM-tmp"){
    @items = stat("$TARGETD/$FLNM-tmp");
    if( $items[7] != 0){
	rename("$TARGETD/$FLNM-tmp","$TARGETD/$FLNM");
    }
}



sub GetRef
{
    my($l)=@_;

    $l =~ s/[\#\/:]/_/g;
    $l =~ s/[\.%&]/-/g;
    $l;
}
