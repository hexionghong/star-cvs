# SLMakefile.bin - put in binaries directory of package (pkg/bin)
#?----------- pkg/bin/Makefile - build executable binaries ------------
# DO NOT EDIT THIS FILE - USE "make reset" FROM BASE DIRECTORY OR
# EDIT THE USER FILES Makefile.control AND Makefile.user
#######################################################################
ifeq ($(EMPTY),$(strip $(BASE_DIR)))
include ../*.config
else
D_FILES = $(OBJS:.o=.d)
endif
#
.PHONY: all clean test install help objs bin staf
#
export VPATH := $(BINDIR) $(SRCMDIR) $(LIBDIRS) $(INCDIRS)
#
VERSION := "$Id: Makefile,v 1.4 1997/03/28 20:49:35 ward Exp $"
# 
#-- Object files
SUFS := *.cc *.c *.F
OBJS := $(foreach s, $(SUFS), $(wildcard $(SRCMDIR)/$(s:\%=*)))
OBJS := $(notdir $(OBJS))
SUFS := %.cc %.c %.F
OBJS := $(foreach s, $(SUFS), $(patsubst $(s),%.o,$(OBJS)))
OBJS := $(filter %.o,$(sort $(OBJS)))
# 
#-- Script files
SUFS := *.csh *.pl *.sh
SCRS := $(foreach s, $(SUFS), $(wildcard $(SRCMDIR)/$(s:\%=*)))
SCRS := $(notdir $(SCRS))
SUFS := %.csh %.pl %.sh
SCRS := $(foreach s, $(SUFS), $(patsubst $(s),%,$(SCRS)))
# 
#-- Dependency files
ifneq ($(EMPTY),$(strip $(D_FILES)))
endif
# 
#-- Binaries
BINS := $(OBJS:%.o=%)
BINS += $(SCRS)
STAF := $(BASE_NAME)Staf
#
#?make all         - Make all pkg/srcm and STAF executables.
all: $(BINDIR) bins staf
#
#?make bins        - Make all pkg/srcm executable binaries. Each code
#?                   file found in pkg/srcm should contain a seperate
#?                   main program.
bins: $(BINDIR)
ifeq ($(EMPTY),$(strip $(BINS)))
	@echo "########################################################"
	@echo "###               No binaries to make.               ###"
	@echo "########################################################"

else
	cd $(BINDIR); \
	$(MAKE) -f $(BINROOT)/Makefile $(BINS)
	@echo "########################################################"
	@echo "###                  Binaries made.                  ###"
	@echo "########################################################"

endif
#
LDFLAGS += -L$(LIBDIR)
LOADLIBES += $(wildcard $(LIBDIR)/lib*.a)
#$(BINS): $(LOAD_LIBS)
#
%: %.o 
	$(LD) $(LDFLAGS) -o $@ $^ $(LOADLIBES)
	chmod +x $@
#
%: %.csh
	cp $^ $@
	chmod +x $@
#
%: %.pl
	cp $^ $@
	chmod +x $@
#
%: %.sh
	cp $^ $@
	chmod +x $@
#
#-- Included makefiles with targets
include $(SLM_DIR)/$(ARCH).mk
ifneq ($(EMPTY),$(strip $(D_FILES)))
include $(SLM_DIR)/d_files.mk
include $(D_FILES)
endif
#
#-- Staf
#?make staf        - Make STAF executable. STAF will contain the ASPs
#?                   and PAMs specified in pkg/Makefile.control.
staf: $(BINDIR)
	cd $(BINDIR); \
	$(MAKE) -f $(BINROOT)/Makefile $(STAF)
	@echo "########################################################"
	@echo "###                    STAF made.                    ###"
	@echo "########################################################"
#
$(STAF).cc: $(BASE_DIR)/$(BASE_NAME).config
	-stafGen -asp $(ASPS) -pam $(PAMS) > $@
#
$(STAF).o: $(STAF).cc
#
UNDEPENDS := -L% -R% -lX11 -lgen -lucb -ldl
$(STAF): $(STAF).o $(filter-out $(UNDEPENDS),$(STAFLIBS)) $(USRLIBS)
	@echo "########################################################"
	@echo "###                    Making $@                     ###"
	@echo "########################################################"
	$(LD) $(LDFLAGS) -o $@ \
	$(patsubst %,-L%,$(LIBDIRS)) \
	$(STAF).o $(STAFLIBS) $(USRLIBS) \
	$(FOR_LIBS)
	chmod +x $@
#
#-- Junk files
JUNK := *.o *.d core *.cc *.c *.f *.h *.hh *.inc
#?make clean       - Remove all generated files from local directories.
clean:
	-cd $(BINDIR); rm -f $(JUNK)
#
#?make test        - Test current environment for SLM compatability.
test:
	@echo "*******************************************************"
	@echo "     STAF = " $(STAF)
	@echo "     OBJS = " $(OBJS)
	@echo "     BINS = " $(BINS)
	@echo "    VPATH = " $(VPATH)
	@echo "  D_FILES = " $(D_FILES)
	@echo " STAFLIBS = " $(STAFLIBS)
	@echo "  USRLIBS = " $(USRLIBS)
	@echo "  LIBDIRS = " $(LIBDIRS)
	@echo "  DEPENDS = " $(DEPENDS)
	@echo "  targets = " $(STAF).o $(TMP) $(USRLIBS)
	@echo "*******************************************************"
ifeq ($(MAKELEVEL),$(ZERO))
	cd $(BINDIR); $(MAKE) -f $(BINROOT)/Makefile test
endif
#
#
#?make objs        - Make all necessary object files.
objs: $(BINDIR)
	cd $(BINDIR); \
	$(MAKE) -f $(BINROOT)/Makefile $(OBJS)
	@echo "########################################################"
	@echo "###                   Objects made.                  ###"
	@echo "########################################################"
#
#
#?make install     - Install binaries in $STAR_LIB/dev/bin area.
#?                   Change INSTALL_BIN_FILES in pkg/Makefile.control.
install:
ifneq ($(EMPTY),$(strip $(INSTALL_BIN_FILES)))
	@echo "########################################################"
	@echo "###             Installing binary files.             ###"
	@echo "########################################################"
	cd $(BINDIR); \
	$(INSTALL) $(INSTALL_BIN_FILES) \
	$(STAR_LIB)/dev/$(BRANCH_NAME)/bin;
else
	@echo "########################################################"
	@echo "###            No binary files to install.           ###"
	@echo "########################################################"
endif
#
$(BINDIR):
	mkdir -p $@
#
#?make help        - Show help for SLMakefile targets.
help:
	@$(SLM_DIR)/help $(SLM_DIR)
#
Makefile: $(SLM_DIR)/SLMakefile.bin
	cp $< $@
#
include $(BASE_DIR)/Makefile.user
#
libftn.a:
	ls /usr/lib/libftn.so
#
