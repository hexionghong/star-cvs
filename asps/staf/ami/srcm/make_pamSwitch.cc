/*:Copyright 1996, Lawrence Berkeley National Laboratory
*:>---------------------------------------------------------------------
*:FILE:         make_pamSwitch.cc
*:DESCRIPTION:  Create ami_pamSwitch.cc.
*:AUTHOR:       cet - Craig E. Tull, cetull@lbl.gov
*:BUGS:         -- STILL IN DEVELOPMENT --
*:HISTORY:      14mar96-v000a-cet- creation
*:<---------------------------------------------------------------------
*/

/*-------------------------------------------- MACROS               --*/
/*-------------------------------------------- INCLUDES             --*/
#include <stdio.h>
#include <stdlib.h>

/*-------------------------------------------- TYPEDEFS             --*/
/*-------------------------------------------- GLOBALS              --*/
/*-------------------------------------------- PROTOTYPES           --*/
extern "C" {
void usage(char* prog);
int main(int argc, char **argv);
}

/*
*:>---------------------------------------------------------------------
*:ROUTINE:      main
*:DESCRIPTION:  program mainline
*:ARGUMENTS:    -- NONE --
*:RETURN VALUE: -- NONE --
*:<---------------------------------------------------------------------
*/

int main(int argc, char **argv)
{
   int i,j,c;

   if (argc != 2) usage(argv[0]);

   printf("/*\n"
		"* This file was automatically generated by:\n"
		"*\t%s %s\n"
		"* Do not edit this file.\n"
   		"*/\n\n"
		,argv[0],argv[1]);

   printf("#include \"ami_types.h\"\n");
   printf("\n");
   printf("STAFCV_T ami_pamSwitch(long rank, FNC_PTR_T ftn\n");
   printf("\t\t, TABLE_HEAD_ST **h, char **d)\n");
   printf("{\n");
   for( i=0;i<atoi(argv[1]);i++ ){
      printf("\ttypedef STAFCV_T (*pam_2st_%d)(\n"		,i);
      if(i==0)printf("\t\tvoid\n");
      for( j=0;j<i;j++ ){
	 if(j==0){c=' ';}else{c=',';}
	 printf("\t\t%c TABLE_HEAD_ST *t%d_h, char *t%d_d\n"	,c,j,j);
      }
      printf("\t);\n");
   }
   printf("\n");
   printf("\tSTAFCV_T status;\n");
   printf("\n");
   printf("\tswitch (rank) {\n");
   for( i=0;i<atoi(argv[1]);i++ ){
      printf("\tcase %d:\n"					,i);
      printf("\t\tpam_2st_%d p%d;\n"				,i,i);
      printf("\t\tp%d = (pam_2st_%d)(ftn);\n"			,i,i);
      printf("\t\tstatus = p%d(\n"				,i);
      for( j=0;j<i;j++ ){
	 if(j==0){c=' ';}else{c=',';}
	 printf("\t\t\t%c h[%d], d[%d]\n"			,c,j,j);
      }
      printf("\t\t);\n");
      printf("\t\tbreak;\n");
   }
   printf("\tdefault:\n");
   printf("\t\tstatus = FALSE;\n");
   printf("\t\tbreak;\n");
   printf("\t}\n");
   printf("\treturn status;\n");
   printf("}\n");
   return 1;
}

/*
*:>---------------------------------------------------------------------
*:ROUTINE:      void usage
*:DESCRIPTION:  Shows usage of main.
*:ARGUMENTS:    char* prog      = Program name.
*:RETURN VALUE: *** KILLS PROGRAM ***
*:<---------------------------------------------------------------------
*/

void usage(char* prog)
{
   printf("Usage: %s num \n",prog);
   exit(0);
}

