<!doctype html public "-//IETF//DTD HTML//EN">
<HTML>

<HEAD>

<META NAME="GENERATOR" CONTENT="Internet Assistant for Word 1.0Z">
<META NAME="AUTHOR" CONTENT="bill">
</HEAD>

<BODY>

<P>
int dsAddDataset(DS_DATASET_T *pDataset, char *dsetName, size_t
setDim, DS_DATASET_T *pChild);
<P>
int dsAddTable(DS_DATASET_T *pDataset, char *name, char *typeSpecifier,
size_t nRow, char **ppData);
<P>
int dsAllocTables(DS_DATASET_T *pDataset);
<P>
int dsCellAddress(char **pAddress, DS_DATASET_T *pTable, size_t
rowNumber , size_t colNumber);
<P>
int dsColumnDimCount(size_t *pCount, DS_DATASET_T *pTable, size_t
colNumber);
<P>
int dsColumnDimensions(size_t *dims, DS_DATASET_T *pTable, size_t
colNumber);
<P>
int dsColumnElcount(size_t *pCount, DS_DATASET_T *pTable, size_t
colNumber);
<P>
int dsColumnName(char **pName, DS_DATASET_T *pTable, size_t colNumber);
<P>
int dsColumnSize(size_t *pSize, DS_DATASET_T *pTable, size_t colNumber);
<P>
int dsColumnTypeCode(DS_TYPE_CODE_T *pCode, DS_DATASET_T *pTable,
size_t colNumber);
<P>
int dsColumnTypeName(char **pName, DS_DATASET_T *pTable, size_t
colNumber);
<P>
void dsDatasetAllocStats(void);
<P>
int dsDatasetEntry(DS_DATASET_T **ppEntry, DS_DATASET_T *pDataset,
size_t entryNumber);
<P>
int dsDatasetEntryCount(size_t *pCount, DS_DATASET_T *pDataset);
<P>
int dsDatasetMaxEntryCount(size_t *pCount, DS_DATASET_T *pDataset);
<P>
int dsDatasetName(char **pName, DS_DATASET_T *pDataset);
<P>
int dsDeleteEntry(DS_DATASET_T *pEntry, DS_DATASET_T *pDataset);
<P>
int dsEquijoin(DS_DATASET_T *pJoinTable,DS_DATASET_T *pTableOne,
DS_DATASET_T *pTableTwo, char *aliases, char *joinLst, char *projectList);
<P>
int dsErrorCode(void);
<P>
int dsFindColumn(size_t *pColNumber, DS_DATASET_T *pTable, char
*name);
<P>
int dsFindEntry(DS_DATASET_T **ppEntry, DS_DATASET_T *pDataset,
char *path);
<P>
int dsFreeDataset(DS_DATASET_T *pDataset);
<P>
int dsGetCell(char *address, DS_DATASET_T *pTable, size_t rowNumber
, size_t colNumber);
<P>
int dsIsDataset(bool_t *pResult, DS_DATASET_T *handle);
<P>
int dsIsTable(bool_t *pResult, DS_DATASET_T *handle);
<P>
void dsLogError(DS_ERROR_CODE_T code, char *msg, char *file, size_t
line);
<P>
int dsPutCell(char *address, DS_DATASET_T *pTable, size_t rowNumber
, size_t colNumber);
<P>
int dsMapTable(DS_DATASET_T *pDataset, char *name, char *typeSpecifier,
size_t *pCount, char **ppData);
<P>
int dsNewDataset(DS_DATASET_T **ppDataset, char *name, size_t
setDim);
<P>
int dsNewTable(DS_DATASET_T **ppTable, char *tableName, char *typeSpecifier,
unsigned rowCount, void *pData);
<P>
void dsPerror(char *msg);
<P>
int dsProjectTable(DS_DATASET_T *pDst, DS_DATASET_T *pSrc, char
*projectList);
<P>
int dsReallocTable(DS_DATASET_T *pTable, size_t nRow);
<P>
int dsSetTableRowCount(DS_DATASET_T *pTable, size_t rowCount);
<P>
int dsTableColumnCount(size_t *pCount, DS_DATASET_T *pTable);
<P>
int dsTableDataAddress(char **pAddress, DS_DATASET_T *pTable);
<P>
int dsTableIsType(bool_t *pResult, DS_DATASET_T *pTable, char
*specifier);
<P>
int dsTableMaxRowCount(size_t *pCount, DS_DATASET_T *pTable);
<P>
int dsTableName(char **pName, DS_DATASET_T *pTable);
<P>
int dsTableRowCount(size_t *pRowCount, DS_DATASET_T *pTable);
<P>
int dsTableRowSize(size_t *pSize, DS_DATASET_T *pTable);
<P>
int dsTableTypeName(char **pName, DS_DATASET_T *pTable);
<P>
int dsTableTypeSpecifier(char **pSpecifier, DS_DATASET_T *pTable);
<P>
int dsTargetTable(DS_DATASET_T **ppTable, char *tableName, char
*typeName, DS_DATASET_T *parentOne, DS_DATASET_T *parentTwo, char
*aliases, char *projectList);
<P>
int dsTasProject(DS_DATASET_T *pDataset, char *name, char *typeSpecifier,
size_t *pCount, void *ppData); 
</BODY>

</HTML>
