<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">

<html>

<head>
<title>xdr I/O</title>
<meta name="GENERATOR" content="Microsoft FrontPage 1.1">
</head>

<body>
<h2>Functions for XDR style I/O</h2>
<p><a href="#dsMapTable">dsMapTable</a> - maps program variables to dataset tables </p>
<p><a href="#dsTasProject">dsTasProject</a> - projects data for a table from a dataset to a program variable </p>
<p><a href="#xdr_dataset">xdr_dataset</a> - encodes or decodes a dataset to a XDR stream </p>
<p><a href="#xdr_dataset_data">xdr_dataset_data</a> - encodes or decodes table data for a dataset </p>
<p><a href="#xdr_dataset_type">xdr_dataset_type</a> - encodes or decodes type information for a dataset </p>
<p><a href="#xdrtape_create">xdrtape_create</a> - create a XDR stream for tape I/O </p>
<p><a href="#xdrtape_flush">xdrtape_flush</a> - flush data buffer for a XDR tape stream </p>
<p><a href="#xdrtape_get_error">xdrtape_get_error</a> - get error information for the last tape error </p>
<p><a href="#xdrtape_perror">xdrtape_perror</a> - print information about the last tape error </p>
<hr>
<h2><a name="dsMapTable">dsMapTable</a></h2>
<p>The <b>dsMapTable</b> function associates a table in a dataset with a program variable. </p>
<p><b>int dsMapTable(DS_DATASET_T</b> *<i>pDataset</i><b>, char *</b><i>tableName</i><b>, char *</b><i>typeSpecifier</i><b>, size_t</b> *<i>pRowCount</i><b>, char</b> **<i>ppData</i><b>);</b> </p>
<h3>Parameters </h3>
<dl>
<dt><i>pDataset</i> </dt>
<dd>Handle of dataset </dd>
<dt><i>tableName</i> </dt>
<dd>Name of table to map </dd>
<dt><i>typeSpecifier</i> </dt>
<dd>Type specifier for a table row </dd>
<dt><i>pRowCount</i> </dt>
<dd>Location to return row count of the table </dd>
<dt><i>ppData</i> </dt>
<dd>Location of pointer to table data </dd>
</dl>
<h3>Return Value</h3>
<p>If the function succeeds, the return value is TRUE. </p>
<p>If the function fails, the return value is FALSE. To get extended error information, call <a href="error.htm#dsErrorCode">dsErrorCode</a>. To print error information call <a href="error.htm#dsPerror">dsPerror</a>. </p>
<h3>Remarks</h3>
<p>If <i>ppData</i> points to a NULL pointer, memory will be allocated for the table and the address will be returned. </p>
<p>This funcrion is a helper for XDR style I/O. </p>
<h2>See Also</h2>
<p><a href="#xdr_dataset_data">xdr_dataset_data</a>, <a href="#xdr_dataset_type">xdr_dataset_type</a> </p>
<hr>
<h2><a name="dsTasProject">dsTasProject</a></h2>
<p>The <b>dsTasProject</b> function projects a table from a dataset into a program variable. </p>
<p><b>int dsTasProject(DS_DATASET_T *</b><i>pDataset</i><b>, char *</b><i>tableName</i><b>, char *</b><i>typeSpecifier</i><b>, size_t *</b><i>pRowCount</i><b>, void *</b><i>ppData</i><b>);</b> </p>
<h3>Parameters </h3>
<dl>
<dt><i>pDataset</i> </dt>
<dd>Handle of dataset </dd>
<dt><i>tableName</i> </dt>
<dd>Name of table to map </dd>
<dt><i>typeSpecifier</i> </dt>
<dd>Type specifier for a table row </dd>
<dt><i>pRowCount</i> </dt>
<dd>Location to return row count of the table </dd>
<dt><i>ppData</i> </dt>
<dd>Location for pointer to the table data </dd>
</dl>
<h3>Return Value</h3>
<p>If the function succeeds, the return value is TRUE. </p>
<p>If the function fails, the return value is FALSE. To get extended error information, call <a href="error.htm#dsErrorCode">dsErrorCode</a>. To print error information call <a href="error.htm#dsPerror">dsPerror</a>. </p>
<h3>Remarks</h3>
<p>This funcrion is a helper for XDR style I/O. </p>
<h2>See Also</h2>
<p><a href="#dsMapTable">dsMapTable</a>, <a href="#xdr_dataset_data">xdr_dataset_data</a>, <a href="#xdr_dataset_type">xdr_dataset_type</a> </p>
<hr>
<h2><a name="xdr_dataset">xdr_dataset</a></h2>
<p>The <b>xdr_dataset</b> function encodes or decodes a dataset to a XDR sream. </p>
<p><b>bool_t xdr_dataset(XDR *</b><i>xdrs</i><b>, DS_DATASET_T **</b><i>ppDataset</i><b>);</b> </p>
<h3>Parameters </h3>
<dl>
<dt><i>xdrs</i> </dt>
<dd>Handle for an XDR stream </dd>
<dt><i>ppDataset</i> </dt>
<dd>Location of a dataset handle </dd>
</dl>
<h3>Return Value</h3>
<p>If the function succeeds, the return value is TRUE. </p>
<p>If the function fails, the return value is FALSE. To get extended error information, call <a href="error.htm#dsErrorCode">dsErrorCode</a>. To print error information call <a href="error.htm#dsPerror">dsPerror</a>. </p>
<h3>Remarks</h3>
<h3>See Also</h3>
<p><a href="#xdr_dataset_data">xdr_dataset_data</a>, <a href="#xdr_dataset_type">xdr_dataset_type</a> </p>
<hr>
<h2><a name="xdr_dataset_data">xdr_dataset_data</a></h2>
<p>The <b>xdr_dataset_data</b> function encodes or decodes a dataset's table data to a XDR sream. </p>
<p><b>bool_t xdr_dataset_data(XDR *</b><i>xdrs</i><b>, DS_DATASET_T *</b><i>pDataset</i><b>);</b> </p>
<h3>Parameters </h3>
<dl>
<dt><i>xdrs</i> </dt>
<dd>Handle for an XDR stream </dd>
<dt><i>pDataset</i> </dt>
<dd>Handle for dataset </dd>
</dl>
<h3>Return Value</h3>
<p>If the function succeeds, the return value is TRUE. </p>
<p>If the function fails, the return value is FALSE. To get extended error information, call <a href="error.htm#dsErrorCode">dsErrorCode</a>. To print error information call <a href="error.htm#dsPerror">dsPerror</a>. </p>
<h3>Remarks</h3>
<h3>See Also</h3>
<p><a href="#xdr_dataset">xdr_dataset</a>, <a href="#xdr_dataset_type">xdr_dataset_type</a> </p>
<hr>
<h2><a name="xdr_dataset_type">xdr_dataset_type</a></h2>
<p>The <b>xdr_dataset_type</b> function encodes or decodes type information for a dataset to a XDR sream. </p>
<p><b>bool_t xdr_dataset_type(XDR *</b><i>xdrs</i><b>, DS_DATASET_T **</b><i>ppDataset</i><b>);</b> </p>
<h3>Parameters </h3>
<dl>
<dt><i>xdrs</i> </dt>
<dd>Handle for an XDR stream </dd>
<dt><i>ppDataset</i> </dt>
<dd>Location of handle for dataset </dd>
</dl>
<h3>Return Value</h3>
<p>If the function succeeds, the return value is TRUE. </p>
<p>If the function fails, the return value is FALSE. To get extended error information, call <a href="error.htm#dsErrorCode">dsErrorCode</a>. To print error information call <a href="error.htm#dsPerror">dsPerror</a>. </p>
<h3>Remarks</h3>
<p>This function encodes or decodes type information for the specified dataset. It does not encode or decode table data</p>
<h3>See Also</h3>
<p><a href="#dsMapTable">dsMapTable</a>, <a href="#xdr_dataset_data">xdr_dataset_data</a> </p>
<hr>
<h2><a name="xdrtape_create">xdrtape_create</a></h2>
<p>The <b>xdrtape_create</b> function intializes an XDR stream for tape I/O. </p>
<p><b>int xdrtape_create(XDR *</b><i>xdrs</i><b>, enum xdr_op </b><i>op</i><b>, int </b><i>fd</i><b>, unsigned </b><i>size</i><b>, int (*</b><i>iofcn</i><b>)(int </b><i>fd</i><b>, char *</b><i>buf</i><b>, unsigned </b><i>count</i><b>));</b> </p>
<h3>Parameters </h3>
<dl>
<dt><i>xdrs</i> </dt>
<dd>Handle for an XDR stream </dd>
<dt><i>op</i> </dt>
<dd>XDR operation </dd>
<dt><i>fd</i> </dt>
<dd>Handle for <i>iofcn</i> </dd>
<dt><i>size</i> </dt>
<dd>Tape record size </dd>
<dt><i>iofcn</i> </dt>
<dd>Function to be called for tape I/O </dd>
<dt><i>buf</i> </dt>
<dd>Location of data </dd>
<dt><i>count</i> </dt>
<dd>Byte count for I/O </dd>
</dl>
<h3>Return Value</h3>
<p>If the function succeeds, the return value is TRUE. </p>
<p>If the function fails, the return value is FALSE. To get extended error information, call <a href="#xdrtape_get_error">xdrtape_get_error</a> . To print error information call 
<a href="#xdrtape_perror">xdrtape_perror</a>. </p>
<h3>Remarks</h3>
<p>This routine initializes the XDR stream object pointed to by xdrs. The XDR stream data is written to, or read from by <i>iofcn</i>. The parameter op 
determines the direction of the XDR stream (either XDR_ENCODE or XDR_DECODE). </p>
<h3>See Also</h3>
<p><a href="#xdrtape_flush">xdrtape_flush</a> </p>
<h3>Consider</h3>
<p>Should the destroy function call xdrtape_flush? </p>
<hr>
<h2><a name="xdrtape_flush">xdrtape_flush</a></h2>
<p>The <b>xdrtape_flush</b> function flushes data buffered for tape write. </p>
<p><b>int xdrtape_flush(XDR *</b><i>xdrs</i><b>);</b> </p>
<h3>Parameters </h3>
<dl>
<dt><i>xdrs</i> </dt>
<dd>Handle for an XDR stream </dd>
</dl>
<h3>Return Value</h3>
<p>If the function succeeds, the return value is TRUE. </p>
<p>If the function fails, the return value is FALSE. To get extended error information, call <a href="#xdrtape_get_error">xdrtape_get_error</a> . To print error information call 
<a href="#xdrtape_perror">xdrtape_perror</a>. </p>
<h3>See Also</h3>
<p><a href="#xdrtape_create">xdrtape_create</a> </p>
<hr>
<h2><a name="xdrtape_get_error">xdrtape_get_error</a></h2>
<p>The <b>xdrtape_get_error</b> function intializes an XDR stream for tape I/O. </p>
<p><b>void xdrtape_get_error(XDR *</b><i>xdrs</i><b>, int *</b><i>pErrorCode</i><b>, char **</b><i>pErrorString</i><b>);</b> </p>
<h3>Parameters </h3>
<dl>
<dt><i>xdrs</i> </dt>
<dd>Handle for an XDR stream </dd>
<dt><i>pErrorCode</i> </dt>
<dd>Error code </dd>
<dt><i>ppErrorString</i> </dt>
<dd>Location to return pointer to error string </dd>
</dl>
<h3>Return Value</h3>
<p>None </p>
<h3>Remarks</h3>
<p>This function only returns information about a xdrtape stream </p>
<h3>See Also</h3>
<p><a href="#xdrtape_perror">xdrtape_perror</a> </p>
<hr>
<h2><a name="xdrtape_perror">xdrtape_perror</a></h2>
<p>The <b>xdrtape_perror</b> function prints a short error message on standard error describing the last I/O error encountered during a call for a xdrtape 
stream. </p>
<p><b>void xdrtape_perror(XDR *</b><i>xdrs</i><b>, char *</b><i>message</i><b>);</b> </p>
<h3>Parameters </h3>
<dl>
<dt><i>xdrs</i> </dt>
<dd>Handle for an XDR stream for tape I/O </dd>
<dt><i>message</i> </dt>
<dd>A message to be printed before the error information. </dd>
</dl>
<h3>Return Value</h3>
<p>None </p>
<h3>Remarks</h3>
<p>This function only returns information about a xdrtape stream. </p>
<h3>See Also</h3>
<p><a href="#xdrtape_get_error">xdrtape_get_error</a> </p>
</body>

</html>
