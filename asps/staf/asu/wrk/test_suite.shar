#! /bin/sh
# This is a shell archive, meaning:
# 1. Remove everything above the #! /bin/sh line.
# 2. Save the resulting text in a file.
# 3. Execute the file with /bin/sh (not csh) to create the files:
#	test000commands.kumac
#	test001vectors.kumac
#	test100soc.kumac
#	test101many.kumac
#	test102bind.kumac
#	test110spx.kumac
#	test120tdm.kumac
#	test121getput.kumac
#	test130dui.kumac
#	test_suite.README
#	test_suite.SETUP
# This archive created: Thu Jun  6 18:07:30 1996
export PATH; PATH=/bin:$PATH
if test -f 'test000commands.kumac'
then
	echo shar: will not over-write existing file "'test000commands.kumac'"
else
cat << \SHAR_EOF > 'test000commands.kumac'
MACRO TEST000COMMANDS

MESS
MESS ************************************************************
MESS ************************************************************
MESS ****  COMMANDS - Show some STAF commands available      ****
MESS ****  from the KUIP command line interface.             ****
MESS ************************************************************
MESS ************************************************************
MESS
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  HELP - Show all menus.                            ****
MESS ************************************************************
HELP

MESS
MESS ************************************************************
MESS ****  SOC - Service and Object Catalog                  ****
MESS ************************************************************
USAGE SOC
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  TDM - Table and Dataset Memory                    ****
MESS ************************************************************
USAGE TDM
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  DUI - Dataset Unix-like Interface                 ****
MESS ************************************************************
USAGE DUI
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  DIO - Dataset Input and Output                    ****
MESS ************************************************************
USAGE DIO
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  AMI - Analysis Module Interface                   ****
MESS ************************************************************
USAGE AMI
WAIT 'Hit <CR> to continue:' 0


RETURN
SHAR_EOF
fi # end of overwriting check
if test -f 'test001vectors.kumac'
then
	echo shar: will not over-write existing file "'test001vectors.kumac'"
else
cat << \SHAR_EOF > 'test001vectors.kumac'
MACRO TEST001VECTORS

MESS
MESS ************************************************************
MESS ************************************************************
MESS ****  ASUVECTORS - Show the two KUIP vectors used by    ****
MESS ****  STAF.                                             ****
MESS ************************************************************
MESS ************************************************************
MESS
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Show STAF Vectors                                 ****
MESS ************************************************************
VECTOR/LIST
VECTOR/PRINT STAF_STATUS
VECTOR/PRINT STAF_RESULT

RETURN
SHAR_EOF
fi # end of overwriting check
if test -f 'test100soc.kumac'
then
	echo shar: will not over-write existing file "'test100soc.kumac'"
else
cat << \SHAR_EOF > 'test100soc.kumac'
MACRO TEST100SOC [1]=4

MESS
MESS ************************************************************
MESS ************************************************************
MESS ****  SOC - Test some SOC commands.                     ****
MESS ************************************************************
MESS ************************************************************
MESS
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Count and list all know objects.                  ****
MESS ************************************************************
SOC/COUNT
SOC/LIST
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Create four generic objects, count and list again.****
MESS ************************************************************
NEWOBJECT apple
NEWOBJECT pear
NEWOBJECT fish
NEWOBJECT banana
SOC/COUNT
SOC/LIST
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Get the IDREF numbers of the objects.             ****
MESS ************************************************************
SOC/IDOBJECT apple
SOC/IDOBJECT pear
SOC/IDOBJECT fish
SOC/IDOBJECT banana
**VECT/PRINT STAF_RESULT
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Get the names of some objects.                    ****
MESS ************************************************************
DO I=0,[1]
	SOC/OBJECT/NAME [I]
ENDDO
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Get the types of some objects.                    ****
MESS ************************************************************
DO I=0,[1]
	SOC/OBJECT/TYPE [I]
ENDDO
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Delete some objects by IDREF number and list      ****
MESS ****  again. - N.B. This may not work!                  ****
MESS ************************************************************
SOC/DELETEID 2
SOC/DELETEID 3
SOC/LIST
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Delete the fish and list again.                   ****
MESS ************************************************************
SOC/DELETEOBJECT fish
SOC/LIST
WAIT 'Hit <CR> to continue:' 0

RETURN
SHAR_EOF
fi # end of overwriting check
if test -f 'test101many.kumac'
then
	echo shar: will not over-write existing file "'test101many.kumac'"
else
cat << \SHAR_EOF > 'test101many.kumac'
MACRO TEST101SOC [1]=20

MESS
MESS ************************************************************
MESS ************************************************************
MESS ****  SOC - Create many objects.                        ****
MESS ************************************************************
MESS ************************************************************
MESS
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Count and list all know objects.                  ****
MESS ************************************************************
SOC/COUNT
SOC/LIST
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Create many objects, count and list again.        ****
MESS ************************************************************
DO I=0,[1]
	SOC/NEWOBJECT soc[I]
ENDDO
SOC/COUNT
SOC/LIST
WAIT 'Hit <CR> to continue:' 0

RETURN
SHAR_EOF
fi # end of overwriting check
if test -f 'test102bind.kumac'
then
	echo shar: will not over-write existing file "'test102bind.kumac'"
else
cat << \SHAR_EOF > 'test102bind.kumac'
MACRO TEST102BIND

MESS
MESS ************************************************************
MESS ************************************************************
MESS ****  BIND DEMO - Demonstrate run-time binding to ASP   ****
MESS ****  DLL.                                              ****
MESS ************************************************************
MESS ************************************************************
MESS
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Show help menu lacking the SPX menu.              ****
MESS ****  SPX was not statically linked to executable.      ****
MESS ************************************************************
HELP

MESS
MESS ************************************************************
MESS ****  Now dynamically link to SPX with SOC/BIND.        ****
MESS ************************************************************
TRACE ON
SOC/BIND spx
TRACE OFF
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Show help menu including the SPX menu.            ****
MESS ****  SPX is now dynamically linked and all its com-    ****
MESS ****  mands and functionallity is availalbe as though   ****
MESS ****  it had been statically linked at compile time.    ****
MESS ************************************************************
USAGE SPX
HELP

MESS
MESS ************************************************************
MESS ****  Try some SPX commands.                            ****
MESS ************************************************************
WAIT 'Hit <CR> to continue:' 0
TRACE ON
SPX/COUNT
SPX/LIST
SPX/NEWDUMMY mats
SPX/NEWGRID jerry 100 20
SPX/LIST
SPX/GRID/HEIGHT jerry
SPX/GRID/WIDTH jerry
SPX/GRID/SET jerry 21 17 1234
SPX/GRID/GET jerry 21 17
TRACE OFF
WAIT 'Hit <CR> to continue:' 0

RETURN
SHAR_EOF
fi # end of overwriting check
if test -f 'test110spx.kumac'
then
	echo shar: will not over-write existing file "'test110spx.kumac'"
else
cat << \SHAR_EOF > 'test110spx.kumac'
MACRO TEST110SPX

MESS
MESS ************************************************************
MESS ************************************************************
MESS ****  SPX - Test some SPX commands.                     ****
MESS ************************************************************
MESS ************************************************************
MESS
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Count and list all know SPX objects.              ****
MESS ************************************************************
SPX/COUNT
SPX/LIST
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Create some GRID objects, count and list.         ****
MESS ************************************************************
SPX/NEWGRID tictactoe 3 3
SPX/NEWGRID chess 16 16
SPX/NEWGRID tron 64 32
SPX/COUNT
SPX/LIST
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Exercise the GRID objects.                        ****
MESS ************************************************************
SPX/GRID/HEIGHT tron
SPX/GRID/WIDTH tron
SPX/GRID/GET chess 7 8
SPX/GRID/SET chess 7 8 123
SPX/GRID/GET chess 7 8
WAIT 'Hit <CR> to continue:' 0

RETURN
SHAR_EOF
fi # end of overwriting check
if test -f 'test120tdm.kumac'
then
	echo shar: will not over-write existing file "'test120tdm.kumac'"
else
cat << \SHAR_EOF > 'test120tdm.kumac'
MACRO TEST120TDM

MESS
MESS ************************************************************
MESS ************************************************************
MESS ****  TDM - Test some TDM commands.                     ****
MESS ************************************************************
MESS ************************************************************
MESS
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Count and list all know TDM objects.              ****
MESS ************************************************************
TDM/COUNT
TDM/LIST
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Create some TDM objects, count and list.          ****
MESS ************************************************************
TDM/NEWTABLE fee 'struct type120a{long x,y,z;};' 10
TDM/NEWTABLE fii 'struct type120b{float p[3];};' 1000
TDM/NEWTABLE foo 'struct type120c{char name[20];};' 101
TDM/NEWTABLE fum 'struct type120d{short x; long y; float z;};' 4
TDM/NEWDATASET eenee 100
TDM/NEWDATASET menee 100
TDM/NEWDATASET minee 100
TDM/NEWDATASET moe 100
TDM/COUNT
TDM/LIST
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Exercise table objects.                           ****
MESS ************************************************************
TDM/TABLE/NAME fum
TDM/TABLE/NAME /dui/fum
TDM/TABLE/NAME ./fum
TDM/TABLE/ROWCOUNT fum
TDM/TABLE/ROWCOUNT fum 2
TDM/TABLE/ROWCOUNT fum
TDM/TABLE/MAXROWCOUNT fum
TDM/TABLE/MAXROWCOUNT fum 40
TDM/TABLE/MAXROWCOUNT fum
TDM/TABLE/COLUMNCOUNT fum
TDM/TABLE/TYPENAME fum
TDM/TABLE/SPECIFIER fum
TDM/TABLE/ROWSIZE fum
TDM/TABLE/PRINT fum
TDM/TABLE/SHOW fum
TDM/TABLE/CELL/GETVALUE 'fum[0].x'
TDM/TABLE/CELL/PUTVALUE 'fum[0].x' 11
TDM/TABLE/CELL/GETVALUE 'fum[0].x'
TDM/TABLE/CELL/PUTVALUE 'fum[1].y' 999
TDM/TABLE/CELL/PUTVALUE 'fum[0].z' 3.1415
TDM/TABLE/PRINT fum
** TDM/TABLE/COLUMN/FIND COLUMNAME
** TDM/TABLE/COLUMN/NAME NCOL
** TDM/TABLE/COLUMN/TYPE NCOL
** TDM/TABLE/COLUMN/CODE NCOL
** TDM/TABLE/COLUMN/RANK NCOL
** TDM/TABLE/COLUMN/SHAPE NCOL
** TDM/TABLE/COLUMN/ELCOUNT NCOL
** TDM/TABLE/COLUMN/SIZE NCOL
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Exercise dataset objects.                         ****
MESS ************************************************************
TDM/DATASET/NAME moe
TDM/DATASET/NAME /dui/moe
TDM/DATASET/NAME ./moe
TDM/DATASET/ENTRYCOUNT moe
TDM/DATASET/MAXENTRYCOUNT moe
** TDM/DATASET/ADDDATASET TDMDATASET NAME [ DIM ]
** TDM/DATASET/ADDTABLE TDMDATASET NAME SPEC ROWCOUNT
** TDM/DATASET/SHOW TDMDATASET [ OPTION ]
** TDM/DATASET/ENTRYNAME NENTRY
** TDM/DATASET/FINDENTRY ENTRYNAME
WAIT 'Hit <CR> to continue:' 0

RETURN
SHAR_EOF
fi # end of overwriting check
if test -f 'test121getput.kumac'
then
	echo shar: will not over-write existing file "'test121getput.kumac'"
else
cat << \SHAR_EOF > 'test121getput.kumac'

MACRO TEST121GETPUT [NROWS]=101

MESS
MESS ************************************************************
MESS ************************************************************
MESS ****  GETPUT - Test the GETVALUE and PUTVALUE commands. ****
MESS ************************************************************
MESS ************************************************************
MESS
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Create a Table.                                   ****
MESS ************************************************************
TDM/NEWTABLE 'tdm_table121' 'struct type121 { _
        long i,j,k; _
        float x,y,z; _
        float p[3]; _
        }' 1001
TDM/TABLE/ROWCOUNT tdm_table121 [NROWS]
TDM/TABLE/SHOW tdm_table121
TDM/TABLE/PRINT tdm_table121
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Set cell values.                                  ****
MESS ************************************************************
DO I=0,[NROWS]-1
        CELL = 'tdm_table121['//[I]//'].i'
        MESS $QUOTE([CELL])
        TDM/TABLE/CELL/PUTVALUE $QUOTE([CELL]) [I]
        CELL = 'tdm_table121['//[I]//'].x'
        MESS $QUOTE([CELL])
	VALUE = 1+[I]
        TDM/TABLE/CELL/PUTVALUE $QUOTE([CELL]) [VALUE]
        CELL = 'tdm_table121['//[I]//'].y'
        MESS $QUOTE([CELL])
	VALUE = 2.2*[I]
        TDM/TABLE/CELL/PUTVALUE $QUOTE([CELL]) [VALUE]
ENDDO
TDM/TABLE/PRINT tdm_table121 [NROWS]
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Get cell values.                                  ****
MESS ************************************************************
DO I=0,[NROWS]-1
        CELL = 'tdm_table121['//[I]//'].i'
        MESS $QUOTE([CELL])
        TDM/TABLE/CELL/GETVALUE $QUOTE([CELL])
        CELL = 'tdm_table121['//[I]//'].x'
        MESS $QUOTE([CELL])
        TDM/TABLE/CELL/GETVALUE $QUOTE([CELL])
        CELL = 'tdm_table121['//[I]//'].y'
        MESS $QUOTE([CELL])
        TDM/TABLE/CELL/GETVALUE $QUOTE([CELL])
ENDDO
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Show STAF_RESULT vector.                          ****
MESS ************************************************************
VECT/PRINT STAF_RESULT
WAIT 'Hit <CR> to continue:' 0

RETURN
SHAR_EOF
fi # end of overwriting check
if test -f 'test130dui.kumac'
then
	echo shar: will not over-write existing file "'test130dui.kumac'"
else
cat << \SHAR_EOF > 'test130dui.kumac'
MACRO TEST130DUI [NSECT]=24 [NI960]=18

MESS
MESS ************************************************************
MESS ************************************************************
MESS ****  DUITREE TEST - Demonstrate creating a Unix-like   ****
MESS ****  dataset hierarchy with the DUI commands.          ****
MESS ************************************************************
MESS ************************************************************
MESS
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Create the heirarchy with MKDIR in a KUIP loop.   ****
MESS ************************************************************
WAIT 'Hit <CR> to continue:' 0
TRACE ON
MKDIR config
MKDIR config/calib
MKDIR raw
MKDIR raw/tpc
DO i=1,[NSECT]
        MKDIR raw/tpc/sect[i]
ENDDO
MKDIR trig
MKDIR trig/level1
MKDIR trig/level1/nothing_here
MKDIR trig/level2
MKDIR trig/level2/nothing_here
MKDIR trig/level3
DO i=1,[NSECT]
        MKDIR trig/level3/sect[i]
        DO j=1,[NI960]
                MKDIR trig/level3/sect[i]/i960_[j]
        ENDDO
        MKDIR trig/level3/sect[i]/track
ENDDO
MKDIR scratch
TRACE OFF
WAIT 'Hit <CR> to continue:' 0

MESS
MESS ************************************************************
MESS ****  Add some tables with MKTABLE in nested KUIP loops.****
MESS ************************************************************
WAIT 'Hit <CR> to continue:' 0
TRACE ON
PWD
CD config
DUI/MKTABLE run_config 'struct run_configuration {long beam_z, _
	beam_a;float beam_e;char start_time[20],  stop_time[20], _
	comment[80];};' 1
CD ../raw/tpc
DO i=1,[NSECT]
        CD sect[i]
        DUI/MKTABLE tpc_data 'struct tpc_data {char adc;};' 1000
        CD ..
ENDDO
CD ../../trig/level3
DO i=1,[NSECT]
        CD sect[i]
        DO j=1,[NI960]
                CD i960_[j]
                DUI/MKTABLE cluster 'struct i960_cluster _
			{short i960ID, nClusters;};' 100
                DUI/MKTABLE data 'struct i960_data {long moment[7];};' _
			100
                CD ..
        ENDDO
        CD track
        DUI/MKTABLE fit 'struct track_fit {float q[3], p[3], _
			chiSquare, errorMatrix[16]; _
			short particleID;};' 50
        CD ../..
ENDDO
MKDIR scratch
PWD
TRACE OFF
WAIT 'Hit <CR> to continue:' 0

RETURN
SHAR_EOF
fi # end of overwriting check
if test -f 'test_suite.README'
then
	echo shar: will not over-write existing file "'test_suite.README'"
else
cat << \SHAR_EOF > 'test_suite.README'

This test suite contains KUMAC files for testing various functions in
STAF.

test000commands.kumac
	Show commands.

test001vectors.kumac
	Show STAF KUIP vectors.

test100soc.kumac
	Test some SOC commands.

test101many.kumac
	Create many objects.
	Argument #1 == number of objects to create

test102bind.kumac
	Test binding to an ASP DLL.

test110spx.kumac
	Test some SPX commands.

test120tdm.kumac
	Test some TDM commands.

test121getput.kumac
	Test the GETVALUE and PUTVALUE commands.
	Argument #1 == number of rows to process

test130dui.kumac
	Test some DUI commands.

SHAR_EOF
fi # end of overwriting check
if test -f 'test_suite.SETUP'
then
	echo shar: will not over-write existing file "'test_suite.SETUP'"
else
cat << \SHAR_EOF > 'test_suite.SETUP'
#!/bin/csh
#
echo "Setting up environment for STAF Test Suite."
#
mkdir data
cd data
ln -s /afs/rhic/star/users/tull/public/data/*.* .
#
SHAR_EOF
chmod +x 'test_suite.SETUP'
fi # end of overwriting check
#	End of shell archive
exit 0
