//:Copyright 1995, Lawrence Berkeley National Laboratory
//:>--------------------------------------------------------------------
//:FILE:	tdm_i.idl
//:DESCRIPTION:	Table & Dataset Memory Orbix-Interface-objects
//:AUTHOR:	cet - Craig E. Tull, cetull@lbl.gov
//:BUGS:	-- STILL IN DEVELOPMENT --
//:HISTORY:	01jan96-v003b-cet- add DSL structures **DOSN'T WORK**
//:HISTORY:	29nov95-v003a-cet- adapt to working Moast
//:HISTORY:	13sep95-v002c-cet- "hack" DS_MAX_DIMS problem
//:HISTORY:	10jul95-v001a-cet- move gen_hier to DIO
//:HISTORY:	06jul95-v000a-cet- creation
//:<--------------------------------------------------------------------

//:----------------------------------------------- INCLUDES           --
#include "soc_i.idl"

//:----------------------------------------------- TYPEDEFS           --
#include "tdm_types.idl"

//:=============================================== INTERFACE          ==
interface tdmObject_i : socObject_i {

//:----------------------------------------------- ATTRIBUTES         --
readonly attribute string dslName;
readonly attribute boolean isDataset;
readonly attribute boolean isTable;

//:----------------------------------------------- FUNCTIONS          --
// **NONE**
};

//:=============================================== INTERFACE          ==
interface tdmTable_i : tdmObject_i {

//:----------------------------------------------- ATTRIBUTES         --
readonly attribute long columnCount;
attribute long maxRowCount;
attribute long rowCount;
readonly attribute long rowSize;
readonly attribute string typeName;
readonly attribute string typeSpecifier;

//:----------------------------------------------- FUNCTIONS          --
boolean isType(in string aType);
STAFCV_T printRows(in long ifirst, in long nrows);
STAFCV_T show();

STAFCV_T findColumn(in string name, out TDM_COLUMN_T column);
STAFCV_T getColumn(in long ncol, out TDM_COLUMN_T column);

//- Column attributes
long columnNumber(in string name);
string columnName(in long ncol);
DS_TYPE_CODE_T columnTypeCode(in long ncol);
long columnSize(in long ncol);
long columnRank(in long ncol);
long columnShape(in long ncol,in long ndim);

long columnElcount(in long ncol);
string columnTypeName(in long ncol);

//- Accessing data.
STAFCV_T getData(out TDM_DATABLOCK_T data);
STAFCV_T putData(in TDM_DATABLOCK_T data);

STAFCV_T getCell(out TDM_CELLDATA_T data, in long nrow, in long ncol);
STAFCV_T putCell(in TDM_CELLDATA_T data, in long nrow, in long ncol);

};

//:=============================================== INTERFACE          ==
interface tdmDataset_i : tdmObject_i {

//:----------------------------------------------- ATTRIBUTES         --
readonly attribute long entryCount;

//:----------------------------------------------- FUNCTIONS          --
STAFCV_T addDataset(in string name, in long setDim);
STAFCV_T addTable(in string name, in string spec, in long rows);
STAFCV_T getEntryType(out string type, in long num);
STAFCV_T getDatasetEntry(out tdmDataset_i dataset, in long num);
STAFCV_T getTableEntry(out tdmTable_i table, in long num);
STAFCV_T findDatasetEntry(out tdmDataset_i dataset, in string name);
STAFCV_T findTableEntry(out tdmTable_i table, in string name);

STAFCV_T getDescriptor(out string descriptor);
};

//:=============================================== INTERFACE          ==
interface tdmFactory_i : socFactory_i {

//:----------------------------------------------- ATTRIBUTES         --

//:----------------------------------------------- FUNCTIONS          --
STAFCV_T deleteDataset(in string name);
tdmDataset_i findDataset(in string name);
tdmDataset_i getDataset(in IDREF_T id);
tdmDataset_i newDataset(in string name, in long setDim);
tdmDataset_i createDataset(in string name, in DSL_PTR_T pDS);

STAFCV_T deleteTable(in string name);
tdmTable_i findTable(in string name);
tdmTable_i getTable(in IDREF_T id);
tdmTable_i newTable(in string name, in string spec, in long rows);
tdmTable_i createTable(in string name, in DSL_PTR_T pDS);

STAFCV_T getTypeName(in long tid, out string name);
STAFCV_T getTypeSpecification(in long tid, out string spec);

//STAFCV_T parsePath(in string spec, out PATH_T path);
};

