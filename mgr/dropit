#!/bin/sh
#  $Id: dropit,v 1.2 1998/02/22 02:07:49 fisyak Exp $
#  $Log: dropit,v $
#  Revision 1.2  1998/02/22 02:07:49  fisyak
#  use ftul parameter definitions
#
#  Revision 1.1  1998/02/17 18:06:47  fisyak
#  Add dropit for PATH
#
# dropit [-i input_delimiter] [-d output_delimiter] [-p string] [substring] 
#      DESCRIPTION
#          dropit's intended purpose is to remove program library names
#          from a PATH shell variable value, which has colon separated
#          fields.  dropit is usable in sh, ksh, and csh shell script
#          and source files.
#
#          If the -i option is not specified, the input separator is a
#          colon.  If the -d option is not specified, the output
#          separator is a colon.  If the -p option is not specified,
#          the value of the PATH shell environment variable is used.
#
#          Option value meanings are:
#
#             input_delimiter
#                       input separator
#
#             output_delimiter
#                       output separator
#
#             string    the string containing colon separated fields to
#                       be operated on
#
#             substring a string which if it is a substring of a field
#                       causes the field to be omitted
#
#
FS=":"
DS=":"
string="$PATH"
substring=""
while test $# -gt 0
do
  case $1 in
        -c);;     
        -i) shift; FS=$1;;            #input_delimiter
        -d) shift; DS=$1;;            #output_delimiter
        -p) shift; string=$1;;        #string  
        -*) shift;;
         *)        substring=$1;;     #substring
  esac
  shift
done 
# Search AWK command
#--------------------
  if [ -x "/usr/local/bin/gawk" ]; then
    awkcmd="/usr/local/bin/gawk"
  elif [ -x "/afs/rhic/local/bin/gawk" ]; then
    awkcmd="/afs/rhic/local/bin/gawk"
  elif [ -x "/usr/bin/nawk" ]; then
    awkcmd="/usr/bin/nawk"
  elif [ -x "/usr/bin/awk" ]; then
    awkcmd="/usr/bin/awk"
  else 
    awkcmd=`which awk`
  fi
#  echo $awkcmd
  if [ -z "${awkcmd}" ]; then
    echo  ${string}
    exit 1
  else
    echo ${string} | $awkcmd  -v substring="$substring" -v FS="$FS" -v DS="$DS" '
BEGIN {}
{ n=0; m=0;
   {for (i=1; i<=NF; i++)
     {m=0; 
     for (j=1; j<i; j++) {
       if (length($i)==length($j)&&index($i,$j)>0) {m++; break;}};
     if (length(substring)>0 && index($i,substring)>0) m++;
     if (m==0) 
       if (length($i)>0) {if (n>0) {x=x DS $i} else {x=x""$i; n++}}}
   }
}
END {print x}
'
   fi
