#!/bin/csh -f

# Help
if ($#argv == 0 || $#argv > 2) then
    /bin/cat <<EOF

 Usage is:
   % setup 'Package' {version}

 where packages stands for one of
   debug|DEBUG                      switch the environment to the debug version of 
                                    the STAR software
   nodebug|NODEBUG                  switch the environment to the nodebug (optimized) 
                                    of the STAR software

   root|ROOT  {version}             load or change root version
   parasoft|PARASOFT|insure|ISURE   load the Insure++ toolkit environment

   gcc        {version}             set environment to use gcc (or alternative version)
   icc|ifc|ifort                    set environment to use Intel compilers

   alt|noalt                        adds/remove OPTSTAR/alt from path

EOF
    exit 0
endif

set pkg = $1; shift;
set version = 0;
if ( $#argv > 0 ) set version = $1

switch ($pkg)
    # Root setup
    case "root":
    case "ROOT":
	if (-f $GROUP_DIR/rootenv.csh) then
	    if ( -x $GROUP_DIR/dropit) then
		setenv MANPATH         `$GROUP_DIR/dropit -p ${MANPATH} ROOT`
		setenv PATH            `$GROUP_DIR/dropit -p ${PATH} ROOT`
		setenv LD_LIBRARY_PATH `$GROUP_DIR/dropit -p ${LD_LIBRARY_PATH} ROOT`
	    endif
	    if ($version != 0) setenv ROOT_LEVEL $version
	    source $GROUP_DIR/rootenv.csh
	endif
	breaksw


    # Parasoft/Isure++ software
    case "insure":
    case "INSURE":
    case "parasoft":
    case "PARASOFT":
	if (-f $GROUP_DIR/parasoftenv.csh) source $GROUP_DIR/parasoftenv.csh
	breaksw


    # use of the Intel compiler
    case "icc":
    case "ifc":
    case "ifort":
	if ( -f $GROUP_DIR/intelcc.csh  )  source $GROUP_DIR/intelcc.csh 
	if ( $?optstar ) setenv  OPTSTAR  $optstar
	if ( $?optstar ) setenv XOPTSTAR $xoptstar
	if ( $?STARCMPL && -x $GROUP_DIR/dropit ) then
	    setenv PATH            `$GROUP_DIR/dropit $STAR_HOST_SYS`
	    setenv LD_LIBRARY_PATH `$GROUP_DIR/dropit -p $LD_LIBRARY_PATH $STAR_HOST_SYS`
	endif 
	setenv STARCMPL "icc"; starver $STAR_LEVEL
	breaksw


    # Alternative or restore of gcc version
    case "gcc":
      if ( -x $GROUP_DIR/dropit ) then
	setenv PATH            `$GROUP_DIR/dropit alt`
	setenv LD_LIBRARY_PATH `$GROUP_DIR/dropit -p $LD_LIBRARY_PATH $OPTSTAR/alt`
      endif

      if ( $version != 0 ) then
        set TEST=`/bin/ls -ld $OPTSTAR/alt/lib/gcc-lib/*/$version/`
        if ("$TEST" == "") then
	  echo "There are no alternate installation of gcc with version $version in $OPTSTAR/alt"
        else
	  setenv PATH $OPTSTAR/alt/bin:$PATH
	  setenv LD_LIBRARY_PATH $OPTSTAR/alt/lib:$LD_LIBRARY_PATH
        endif
      endif
      if ( $?optstar ) setenv  OPTSTAR  $optstar
      if ( $?optstar ) setenv XOPTSTAR $xoptstar
      if ( $?STARCMPL && -x $GROUP_DIR/dropit ) then
	setenv PATH            `$GROUP_DIR/dropit $STAR_HOST_SYS`
	setenv LD_LIBRARY_PATH `$GROUP_DIR/dropit -p $LD_LIBRARY_PATH $STAR_HOST_SYS`
      endif 
      setenv STARCMPL "gcc"; starver $STAR_LEVEL
      breaksw

    # alternatively, add a plugin for the alt tree
    case "alt":
      if ( -x $GROUP_DIR/dropit ) then
	setenv PATH            `$GROUP_DIR/dropit alt`
	setenv LD_LIBRARY_PATH `$GROUP_DIR/dropit -p $LD_LIBRARY_PATH $OPTSTAR/alt`
      endif
      setenv PATH $OPTSTAR/alt/bin:$PATH
      setenv LD_LIBRARY_PATH $OPTSTAR/alt/lib:$LD_LIBRARY_PATH
      breaksw

    case "noalt":
      if ( -x $GROUP_DIR/dropit ) then
	setenv PATH            `$GROUP_DIR/dropit alt`
	setenv LD_LIBRARY_PATH `$GROUP_DIR/dropit -p $LD_LIBRARY_PATH $OPTSTAR/alt`
      endif
      breaksw

    # debug / nodebug
    case "nodebug":
    case "NODEBUG":
      setenv NODEBUG yes; starver $STAR_LEVEL
      breaksw
    case "debug":
    case "DEBUG":
      unsetenv NODEBUG yes;
      if ( -x $GROUP_DIR/dropit ) then
	setenv PATH            `$GROUP_DIR/dropit BIN`
	setenv LD_LIBRARY_PATH `$GROUP_DIR/dropit -p $LD_LIBRARY_PATH LIB`
      endif
      starver $STAR_LEVEL
      breaksw


    #
    # kind of obsolete but may re-add later
    #
    case "g4":
    case "G4":
         #=====#
	if (-f $GROUP_DIR/g4env.csh) source $GROUP_DIR/G4env.csh
	breaksw

    case "cc4":
    case "CC4":
         #=====#
	if ($?USE_CC5 != 0) unsetenv USE_CC5
        if ( -x $GROUP_DIR/dropit) then
          setenv PATH `$GROUP_DIR/dropit WS5.0`
          setenv PATH `$GROUP_DIR/dropit .sun4x_56_CC5`
          setenv LD_LIBRARY_PATH `$GROUP_DIR/dropit -p $LD_LIBRARY_PATH 5.0`
          setenv LD_LIBRARY_PATH `$GROUP_DIR/dropit -p $LD_LIBRARY_PATH .sun4x_56_CC5`
        endif
	setenv USE_CC4; starver $STAR_LEVEL
	breaksw
    case "cc5":
    case "CC5":
         #=====#
	if ($?USE_CC4 != 0) unsetenv USE_CC4
        if ( -x $GROUP_DIR/dropit) then
          setenv PATH `$GROUP_DIR/dropit SUNWspro`
          setenv PATH `$GROUP_DIR/dropit .sun4x_56`
          setenv LD_LIBRARY_PATH `$GROUP_DIR/dropit -p $LD_LIBRARY_PATH SUNWspro`
          setenv LD_LIBRARY_PATH `$GROUP_DIR/dropit -p $LD_LIBRARY_PATH .sun4x_56`
        endif
	starver $STAR_LEVEL
	breaksw

    case "Dsv":
    case "dsv":
    case "DSV":
	if (-r $AFS_RHIC/star/packages/Dsv/Dsvenv.csh) source $AFS_RHIC/star/packages/Dsv/Dsvenv.csh
      breaksw
    case "KCC":
    case "kcc":
      setenv USE_KCC;  starver $STAR_LEVEL
      breaksw
    default:
	echo "Setup for [$pkg] is not defined"
      breaksw
endsw
